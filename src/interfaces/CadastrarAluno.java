/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import javax.swing.JOptionPane;
import java.sql.Date;
import java.util.Vector;
import entidade.Aluno;
import entidade.Endereço;
import controlador.ControladorCadastroAluno;
import entidade.Visão;
import javax.swing.DefaultComboBoxModel;
import entidade.Data;

/**
 *
 * @author 05320469195
 */
public class CadastrarAluno extends javax.swing.JFrame {

    ControladorCadastroAluno controlador;
    Vector<Visão<String>> alunos_cadastrados;
    
    public CadastrarAluno(ControladorCadastroAluno controlador) {
        this.controlador = controlador;
        alunos_cadastrados = Aluno.getVisões();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nome_alunoLabel = new javax.swing.JLabel();
        nome_TextField = new javax.swing.JTextField();
        sobrenome_alunoLabel = new javax.swing.JLabel();
        sobrenome_TextField = new javax.swing.JTextField();
        cpf_alunoLabel = new javax.swing.JLabel();
        cpf_TextField = new javax.swing.JTextField();
        data_nascimento_alunoLabel = new javax.swing.JLabel();
        altura_alunoLabel = new javax.swing.JLabel();
        peso_alunoLabel = new javax.swing.JLabel();
        nome_rua_Label = new javax.swing.JLabel();
        logradouro_TextField = new javax.swing.JTextField();
        bairro_Label = new javax.swing.JLabel();
        bairro_TextField = new javax.swing.JTextField();
        numero_Label = new javax.swing.JLabel();
        cep_Label = new javax.swing.JLabel();
        cep_TextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cadastrar_alunoButton = new javax.swing.JButton();
        alterar_alunoButton = new javax.swing.JButton();
        remover_alunoButton = new javax.swing.JButton();
        consultar_alunoButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();
        lista_alunoLabel = new javax.swing.JLabel();
        lista_alunosComboBox = new javax.swing.JComboBox<>();
        data_nascimento_TextField = new javax.swing.JFormattedTextField();
        altura_TextField = new javax.swing.JFormattedTextField();
        peso_TextField = new javax.swing.JFormattedTextField();
        numero_TextField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        cidade_TextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        nome_alunoLabel.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 0, 0);
        getContentPane().add(nome_alunoLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 1, 0, 1);
        getContentPane().add(nome_TextField, gridBagConstraints);

        sobrenome_alunoLabel.setText("Sobrenome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(sobrenome_alunoLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 1, 0, 61);
        getContentPane().add(sobrenome_TextField, gridBagConstraints);

        cpf_alunoLabel.setText("CPF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(cpf_alunoLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        getContentPane().add(cpf_TextField, gridBagConstraints);

        data_nascimento_alunoLabel.setText("Data da Nascimento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        getContentPane().add(data_nascimento_alunoLabel, gridBagConstraints);

        altura_alunoLabel.setText("Altura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(altura_alunoLabel, gridBagConstraints);

        peso_alunoLabel.setText("Peso:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(peso_alunoLabel, gridBagConstraints);

        nome_rua_Label.setText("Nome da Rua:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        getContentPane().add(nome_rua_Label, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 142;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        getContentPane().add(logradouro_TextField, gridBagConstraints);

        bairro_Label.setText("Bairro:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(bairro_Label, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        getContentPane().add(bairro_TextField, gridBagConstraints);

        numero_Label.setText("Número:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(numero_Label, gridBagConstraints);

        cep_Label.setText("CEP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(cep_Label, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 62);
        getContentPane().add(cep_TextField, gridBagConstraints);

        cadastrar_alunoButton.setText("Cadastrar");
        cadastrar_alunoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrar_alunoButtonActionPerformed(evt);
            }
        });

        alterar_alunoButton.setText("Alterar");
        alterar_alunoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterar_alunoButtonActionPerformed(evt);
            }
        });

        remover_alunoButton.setText("Remover");
        remover_alunoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remover_alunoButtonActionPerformed(evt);
            }
        });

        consultar_alunoButton.setText("Consultar");
        consultar_alunoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultar_alunoButtonActionPerformed(evt);
            }
        });

        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cadastrar_alunoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterar_alunoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remover_alunoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consultar_alunoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limparButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrar_alunoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alterar_alunoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(remover_alunoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(consultar_alunoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(limparButton))))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 60);
        getContentPane().add(jPanel1, gridBagConstraints);

        lista_alunoLabel.setText("Lista de Alunos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(53, 0, 0, 0);
        getContentPane().add(lista_alunoLabel, gridBagConstraints);

        lista_alunosComboBox.setModel(new DefaultComboBoxModel(alunos_cadastrados));
        lista_alunosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lista_alunosComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        getContentPane().add(lista_alunosComboBox, gridBagConstraints);

        data_nascimento_TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        data_nascimento_TextField.setText("(dd/mm/aaaa)");
        data_nascimento_TextField.setMinimumSize(new java.awt.Dimension(74, 25));
        data_nascimento_TextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                data_nascimento_TextFieldFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 31);
        getContentPane().add(data_nascimento_TextField, gridBagConstraints);

        altura_TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        getContentPane().add(altura_TextField, gridBagConstraints);

        peso_TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(peso_TextField, gridBagConstraints);

        numero_TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(numero_TextField, gridBagConstraints);

        jLabel1.setText("Cidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 98;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 2);
        getContentPane().add(cidade_TextField, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrar_alunoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrar_alunoButtonActionPerformed
        Aluno aluno = obterAluno();
        String erro = null; 
        
        if (aluno != null){
            erro = controlador.inserirAluno(aluno);
            if (erro != null ) {
                JOptionPane.showMessageDialog(this, erro, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this, "Aluno inserido com sucesso!", "SUCESSO!", JOptionPane.INFORMATION_MESSAGE); 
                Visão<String> novavisao = new Visão<String>(aluno.getCPF(), aluno.getNome() + " - " + aluno.getCPF());
                alunos_cadastrados.add(novavisao);
                lista_alunosComboBox.updateUI();
                lista_alunosComboBox.setSelectedItem(novavisao);
            } 
        }
    }//GEN-LAST:event_cadastrar_alunoButtonActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed
        limparCampos();
    }//GEN-LAST:event_limparButtonActionPerformed

    private void consultar_alunoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultar_alunoButtonActionPerformed
        Aluno aluno = null;
        Visão<String> visão = (Visão<String>)
        lista_alunosComboBox.getSelectedItem();
        
        if(lista_alunosComboBox.getSelectedIndex() != -1) {
            aluno = Aluno.buscarAluno(visão.getChave());
        }
        else {
            if(cpf_TextField.getText().isEmpty())
                aluno = Aluno.buscarAluno(cpf_TextField.getText());
            else
                JOptionPane.showMessageDialog(this, "Campo CPF vazio, ou aluno não selecionado", "SUCESSO!", JOptionPane.INFORMATION_MESSAGE); 
        }
        
        if (aluno != null){
            nome_TextField.setText(aluno.getNome());
            sobrenome_TextField.setText(aluno.getSobrenome());
            cpf_TextField.setText(aluno.getCPF());
            data_nascimento_TextField.setText(aluno.getData_nascimento().toString());
            logradouro_TextField.setText(aluno.getEndereço().getLogradouro());
            bairro_TextField.setText(aluno.getEndereço().getBairro());
            cidade_TextField.setText(aluno.getEndereço().getCidade());
            cep_TextField.setText(aluno.getEndereço().getCEP());
            peso_TextField.setText(Float.toString(aluno.getPeso()));
            altura_TextField.setText(Float.toString(aluno.getAltura()));
            numero_TextField.setText(Integer.toString(aluno.getEndereço().getNumero()));
        } 
        else{
            JOptionPane.showMessageDialog(this, "O CPF não foi encontrado!", "ERRO!", JOptionPane.INFORMATION_MESSAGE); 
        }
         
    }//GEN-LAST:event_consultar_alunoButtonActionPerformed

    private void lista_alunosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lista_alunosComboBoxActionPerformed

    }//GEN-LAST:event_lista_alunosComboBoxActionPerformed

    private void data_nascimento_TextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_data_nascimento_TextFieldFocusGained
        data_nascimento_TextField.setText("");
    }//GEN-LAST:event_data_nascimento_TextFieldFocusGained

    private void alterar_alunoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterar_alunoButtonActionPerformed
        String erro = null;
        Aluno alterar = obterAluno();
        Visão<String> visao = (Visão<String>)lista_alunosComboBox.getSelectedItem();

            if (!visao.getChave().equals(alterar.getCPF())){
                JOptionPane.showMessageDialog(this, "CPF selecionado difere do CPF digitado no campo 'CPF'!", "ERRO!", JOptionPane.INFORMATION_MESSAGE); 
            }
            else{
                 erro = controlador.alterarAluno(alterar);
                if (erro == null){
                    JOptionPane.showMessageDialog(this, "Aluno alterado com sucesso!", "Informação!", JOptionPane.INFORMATION_MESSAGE); 
                    alunos_cadastrados.remove(visao);
                    alunos_cadastrados.add(new Visão<String>(alterar.getCPF(), alterar.getNome() + " - " + alterar.getCPF()));
                    lista_alunosComboBox.updateUI();
                    lista_alunosComboBox.setSelectedIndex(lista_alunosComboBox.getItemCount()-1);
                }
                else
                    JOptionPane.showMessageDialog(this, erro, "Erro!", JOptionPane.INFORMATION_MESSAGE);
           }
        
    }//GEN-LAST:event_alterar_alunoButtonActionPerformed

    private void remover_alunoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remover_alunoButtonActionPerformed
        
        String erro = null;
        Visão<String> visao = (Visão<String>)lista_alunosComboBox.getSelectedItem();
        Aluno aluno = Aluno.buscarAluno(visao.getChave());
        
        if(visao != null) {
            erro = controlador.removerAluno(aluno);
            if (erro == null){
                JOptionPane.showMessageDialog(this, "Aluno removido com sucesso!", "Informação!", JOptionPane.INFORMATION_MESSAGE); 
                alunos_cadastrados.remove(visao);
                lista_alunosComboBox.updateUI();
                if (lista_alunosComboBox.getItemCount() == 0)
                    lista_alunosComboBox.setSelectedIndex(-1);
                else
                    lista_alunosComboBox.setSelectedIndex(0);
            }
            else {
                JOptionPane.showMessageDialog(this, erro, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_remover_alunoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterar_alunoButton;
    private javax.swing.JFormattedTextField altura_TextField;
    private javax.swing.JLabel altura_alunoLabel;
    private javax.swing.JLabel bairro_Label;
    private javax.swing.JTextField bairro_TextField;
    private javax.swing.JButton cadastrar_alunoButton;
    private javax.swing.JLabel cep_Label;
    private javax.swing.JTextField cep_TextField;
    private javax.swing.JTextField cidade_TextField;
    private javax.swing.JButton consultar_alunoButton;
    private javax.swing.JTextField cpf_TextField;
    private javax.swing.JLabel cpf_alunoLabel;
    private javax.swing.JFormattedTextField data_nascimento_TextField;
    private javax.swing.JLabel data_nascimento_alunoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton limparButton;
    private javax.swing.JLabel lista_alunoLabel;
    private javax.swing.JComboBox<String> lista_alunosComboBox;
    private javax.swing.JTextField logradouro_TextField;
    private javax.swing.JTextField nome_TextField;
    private javax.swing.JLabel nome_alunoLabel;
    private javax.swing.JLabel nome_rua_Label;
    private javax.swing.JLabel numero_Label;
    private javax.swing.JFormattedTextField numero_TextField;
    private javax.swing.JFormattedTextField peso_TextField;
    private javax.swing.JLabel peso_alunoLabel;
    private javax.swing.JButton remover_alunoButton;
    private javax.swing.JTextField sobrenome_TextField;
    private javax.swing.JLabel sobrenome_alunoLabel;
    // End of variables declaration//GEN-END:variables

    private Aluno obterAluno(){
        String nome = null, sobrenome = null, cpf = null, data_nascimento = null, logradouro = null, bairro = null, cep = null, peso = null, altura = null, num = null, cidade = null;
        int ano, mes, dia;
         nome = nome_TextField.getText();
         sobrenome = sobrenome_TextField.getText();
         cpf = cpf_TextField.getText();
         data_nascimento = data_nascimento_TextField.getText();
         logradouro = logradouro_TextField.getText();
         bairro = bairro_TextField.getText();
         cidade = cidade_TextField.getText();
         cep = cep_TextField.getText();
         peso = peso_TextField.getText();
         altura = altura_TextField.getText();
         num = numero_TextField.getText();
        
      if (nome.isEmpty() || sobrenome.isEmpty() || cpf.isEmpty() || data_nascimento.isEmpty() || logradouro.isEmpty() || bairro.isEmpty() || cep.isEmpty() || peso.isEmpty() ||altura.isEmpty() || num.isEmpty() || cidade.isEmpty() || data_nascimento_TextField.getText().equals("(dd/mm/aaaa)")){
            JOptionPane.showMessageDialog(this, "Algum campo está em branco.", "ERRO!", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
      
      Data data = Data.toDate(data_nascimento);
      
        return new Aluno (nome, sobrenome, cpf, data, Float.parseFloat(peso.replace(',', '.')), Float.parseFloat(altura.replace(',', '.')), new Endereço(logradouro, bairro, cep, Integer.parseInt(num), cidade));
    }
    
    private void limparCampos(){
        nome_TextField.setText("");
        sobrenome_TextField.setText("");
        cpf_TextField.setText("");
        data_nascimento_TextField.setText("");
        logradouro_TextField.setText("");
        bairro_TextField.setText("");
        cep_TextField.setText("");
        peso_TextField.setText("");
        numero_TextField.setText("");
        altura_TextField.setText("");
        cidade_TextField.setText("");    
    }
    
    private Visão<String> getVisãoAlunosCadastrados(String chave) {
        for (Visão<String> visão : alunos_cadastrados) {
            if (visão.getChave().equals(chave)) return visão;
        }
        return null;
    }
}

